[
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Visualization Exercise",
    "section": "",
    "text": "Below is an exercise for visualizing data with help from ChatGPT (ChatGPT 4o model).\n\nIntroduction\nI will use the NBA RAPTOR (Robust Algorithm (using) Player Tracking (and) On/Off Ratings) dataset from the ’22-’23 season for this exercise. The dataset is published on FiveThirtyEight (https://projects.fivethirtyeight.com/nba-player-ratings/?ex_cid=irpromo) and was last updated on June 14th, 2023. By default, the data contains 250 NBA players who played at least 1,137 minutes during the season. In total, 14 columns are included with details shown below. More details can also be found on their Github website: https://github.com/fivethirtyeight/data/tree/master/nba-raptor.\nPLAYER: Player name.\nTEAM: Team name.\nPOSITION: Positions played.\nMINUTES: Minutes played.\nraptor_box_offense: Points above average per 100 possessions added by player on offense, based only on box score estimate.\nraptor_box_defense: Points above average per 100 possessions added by player on defense, based only on box score estimate.\nraptor_box_total: Points above average per 100 possessions added by player, based only on box score estimate.\nraptor_onoff_offense: Points above average per 100 possessions added by player on offense, based only on plus-minus data.\nraptor_onoff_defense: Points above average per 100 possessions added by player on defense, based only on plus-minus data.\nraptor_onoff_total: Points above average per 100 possessions added by player, based only on plus-minus data.\nraptor_offense: Points above average per 100 possessions added by player on offense, using both box and on-off components.\nraptor_defense: Points above average per 100 possessions added by player on defense, using both box and on-off components.\nraptor_total: Points above average per 100 possessions added by player on both offense and defense, using both box and on-off components.\nwar_total: Wins Above Replacement between regular season and playoffs.\nI directly copied the data from the website and paste it into Excel. I then saved the file in a csv format for analysis. First of all, let’s import the data and take a look at the data structure.\n\n# Load required package\n# library(gtExtras)\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\nlibrary(ggtext)\nlibrary(gtsummary)\n\nWarning: package 'gtsummary' was built under R version 4.2.3\n\nlibrary(gt)\n\nWarning: package 'gt' was built under R version 4.2.3\n\nlibrary(ggplot2)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ tibble  3.2.1     ✔ dplyr   1.1.3\n✔ tidyr   1.3.1     ✔ stringr 1.5.1\n✔ readr   2.1.2     ✔ forcats 1.0.0\n✔ purrr   1.0.2     \n\n\nWarning: package 'tibble' was built under R version 4.2.3\n\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\n\nWarning: package 'purrr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'stringr' was built under R version 4.2.3\n\n\nWarning: package 'forcats' was built under R version 4.2.3\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\n\n# Import the data file and check its structure\ndata &lt;- read.csv(\"nbadata.csv\")\nhead(data)\n\n         PLAYER      TEAM   POSITION MINUTES raptor_box_offense\n1  Nikola Jokic   Nuggets          C    3112                9.0\n2   Joel Embiid     76ers          C    2620                4.0\n3  Jimmy Butler      Heat     SG, SF    3012                6.4\n4   Luka Doncic Mavericks PG, SG, SF    2391                8.9\n5 Anthony Davis    Lakers      PF, C    2512                2.4\n6  Jayson Tatum   Celtics         SF    3531                4.3\n  raptor_box_defense raptor_box_total raptor_onoff_offense raptor_onoff_defense\n1                4.3             13.3                  9.4                  0.3\n2                4.0              7.9                  2.1                  3.7\n3                1.3              7.7                  0.2                 -1.8\n4               -0.3              8.5                  3.7                 -0.9\n5                4.7              7.1                  2.2                  3.5\n6               -0.3              3.9                  4.6                 -0.1\n  raptor_onoff_total raptor_offense raptor_defense raptor_total war_total\n1                9.7            9.5            3.7         13.2      25.9\n2                5.8            3.7            4.1          7.8      14.2\n3               -1.6            5.5            0.7          6.2      13.8\n4                2.7            8.3           -0.4          7.8      13.0\n5                5.7            2.5            4.7          7.2      12.9\n6                4.5            4.5           -0.3          4.2      12.6\n\nstr(data)\n\n'data.frame':   250 obs. of  14 variables:\n $ PLAYER              : chr  \"Nikola Jokic\" \"Joel Embiid\" \"Jimmy Butler\" \"Luka Doncic\" ...\n $ TEAM                : chr  \"Nuggets\" \"76ers\" \"Heat\" \"Mavericks\" ...\n $ POSITION            : chr  \"C\" \"C\" \"SG, SF\" \"PG, SG, SF\" ...\n $ MINUTES             : num  3112 2620 3012 2391 2512 ...\n $ raptor_box_offense  : num  9 4 6.4 8.9 2.4 4.3 7.3 9.4 5.1 1.7 ...\n $ raptor_box_defense  : num  4.3 4 1.3 -0.3 4.7 -0.3 -1.4 -1.5 0.2 2.6 ...\n $ raptor_box_total    : num  13.3 7.9 7.7 8.5 7.1 3.9 6 8 5.3 4.2 ...\n $ raptor_onoff_offense: num  9.4 2.1 0.2 3.7 2.2 4.6 6 5.7 6.7 2.7 ...\n $ raptor_onoff_defense: num  0.3 3.7 -1.8 -0.9 3.5 -0.1 0.1 -1.2 -5.3 1.8 ...\n $ raptor_onoff_total  : num  9.7 5.8 -1.6 2.7 5.7 4.5 6.1 4.5 1.4 4.4 ...\n $ raptor_offense      : num  9.5 3.7 5.5 8.3 2.5 4.5 7.5 9.3 5.7 1.9 ...\n $ raptor_defense      : num  3.7 4.1 0.7 -0.4 4.7 -0.3 -1.2 -1.5 -1 2.5 ...\n $ raptor_total        : num  13.2 7.8 6.2 7.8 7.2 4.2 6.3 7.8 4.8 4.4 ...\n $ war_total           : num  25.9 14.2 13.8 13 12.9 12.6 11.5 11.5 10.9 10.7 ...\n\n\nAs shown, the 250 players’ information are imported with the right format.\n\n\nReplicate a figure using ChatGPT\nNow I will try to replicate the figure on the website with help from ChatGPT. Here I’m attaching my communication with ChatGPT and the code she gives me.\nMe: Good morning! I’m trying to extract data from this website: https://projects.fivethirtyeight.com/nba-player-ratings/?ex_cid=irpromo and analyze it. Can you help me by showing me R code? When I place my requirements, just directly answer my questions. Please don’t answer side information that is not related to my questions. Thanks! I will tell you my requirements for the analysis.\nChatGPT: Good morning! Yes, I can help. Please provide your requirements for the analysis, and I’ll respond with R code directly.\nMe: Great! Now I want to replicate the figure shown on their website. I have attached the screenshots of their figure and the data I have. Please give me code using ggplot2 and make sure that the output figure is exactly the same to theirs. By “exactly the same” I mean not only the scatter plot should be the same, I also want the same theme, axis titles, axis texts, grid lines, background colors, and texts with boxes in the figure. The two variables you should use are “raptor_offense” and “raptor_defense”. You don’t need to make the figure interactive. I have imported the data into R and am waiting for your code. Thanks!\nChatGPT: Here is the R code to replicate the figure using ggplot2. This code ensures that the scatter plot, background colors, quadrant labels, axis formatting, and overall aesthetics match the original figure.\n\n# Assuming your dataset is named 'data'\n# Define the quadrants based on raptor_offense and raptor_defense\ndata$quadrant &lt;- with(data, ifelse(raptor_offense &gt;= 0 & raptor_defense &gt;= 0, \"Positive Offense & Defense\",\n                            ifelse(raptor_offense &lt; 0 & raptor_defense &gt;= 0, \"Negative Offense & Positive Defense\",\n                            ifelse(raptor_offense &lt; 0 & raptor_defense &lt; 0, \"Negative Offense & Defense\",\n                                   \"Positive Offense & Negative Defense\"))))\n\n# Create the plot\nggplot(data, aes(x = raptor_offense, y = raptor_defense)) +\n  # Background colors for quadrants\n  annotate(\"rect\", xmin = -Inf, xmax = 0, ymin = -Inf, ymax = 0, fill = \"pink\", alpha = 0.3) +\n  annotate(\"rect\", xmin = 0, xmax = Inf, ymin = 0, ymax = Inf, fill = \"lightblue\", alpha = 0.3) +\n  annotate(\"rect\", xmin = -Inf, xmax = 0, ymin = 0, ymax = Inf, fill = \"white\", alpha = 0.3) +\n  annotate(\"rect\", xmin = 0, xmax = Inf, ymin = -Inf, ymax = 0, fill = \"white\", alpha = 0.3) +\n  \n  # Scatter plot\n  geom_point(color = \"black\", fill = \"white\", shape = 21, size = 3, stroke = 1) +\n  \n  # Axis labels\n  labs(x = \"Offensive RAPTOR rating\", y = \"Defensive RAPTOR rating\") +\n  \n  # Axis formatting\n  scale_x_continuous(limits = c(-10, 10), breaks = seq(-10, 10, 5)) +\n  scale_y_continuous(limits = c(-10, 10), breaks = seq(-10, 10, 5)) +\n  \n  # Add quadrant labels with colored backgrounds\n  annotate(\"text\", x = -7, y = -7, label = \"- offense\\n- defense\", color = \"black\",\n           fill = \"pink\", fontface = \"bold\", size = 5, hjust = 0.5, vjust = 0.5) +\n  annotate(\"text\", x = 7, y = 7, label = \"+ offense\\n+ defense\", color = \"black\",\n           fill = \"lightblue\", fontface = \"bold\", size = 5, hjust = 0.5, vjust = 0.5) +\n  annotate(\"text\", x = -7, y = 7, label = \"- offense\\n+ defense\", color = \"black\",\n           fill = \"lightblue\", fontface = \"bold\", size = 5, hjust = 0.5, vjust = 0.5) +\n  annotate(\"text\", x = 7, y = -7, label = \"+ offense\\n- defense\", color = \"black\",\n           fill = \"pink\", fontface = \"bold\", size = 5, hjust = 0.5, vjust = 0.5) +\n  \n  # Theme to match FiveThirtyEight style\n  theme_minimal(base_size = 14) +\n  theme(panel.grid.major = element_line(color = \"gray90\"),\n        panel.grid.minor = element_blank(),\n        panel.background = element_rect(fill = \"white\", color = NA),\n        plot.background = element_rect(fill = \"white\", color = NA),\n        axis.title = element_text(face = \"bold\"),\n        axis.text = element_text(face = \"bold\"))\n\nWarning in annotate(\"text\", x = -7, y = -7, label = \"- offense\\n- defense\", :\nIgnoring unknown parameters: `fill`\n\n\nWarning in annotate(\"text\", x = 7, y = 7, label = \"+ offense\\n+ defense\", :\nIgnoring unknown parameters: `fill`\n\n\nWarning in annotate(\"text\", x = -7, y = 7, label = \"- offense\\n+ defense\", :\nIgnoring unknown parameters: `fill`\n\n\nWarning in annotate(\"text\", x = 7, y = -7, label = \"+ offense\\n- defense\", :\nIgnoring unknown parameters: `fill`\n\n\n\n\n\n\n\n\n\nThis will generate a figure that closely matches the one on the FiveThirtyEight website, including the quadrant shading, labeled regions, scatter points, and overall aesthetic. Let me know if you need any adjustments!\nMe: Thank you for your help! But what you give me is slightly different from their figure. I will adjust the code manually.\nChatGPT: You’re welcome! That sounds like a great plan. You can fine-tune the details to match their figure exactly. Let me know if you need any further refinements or help adjusting specific elements. Happy coding!\nBased on what ChatGPT gave me, I then modified the code trying to make a more similar figure as posted on the website. My version is shown below.\n\n# My version of code\nggplot(data, aes(x = raptor_offense, y = raptor_defense)) +\n  annotate(\"rect\", xmin=-10, xmax=0, ymin=-10, ymax=0, fill=\"pink2\", alpha=.6) +\n  annotate(\"rect\", xmin=0, xmax=10, ymin=0, ymax=10, fill=\"cadetblue2\", alpha=.6) +\n  \n  geom_point(color=\"black\", fill=\"white\", shape=21, size=3.5, stroke=.85) +\n  \n  labs(x = \"Offensive RAPTOR rating\", y = \"Defensive RAPTOR rating\") +\n  \n  scale_x_continuous(limits=c(-10, 10), breaks=seq(-10, 10, 5), labels=c(\"-10\", \"-5\", \"0\", \"+5\", \"+10\")) +\n  scale_y_continuous(limits=c(-10, 10), breaks=seq(-10, 10, 5), labels=c(\"-10\", \"-5\", \"0\", \"+5\", \"+10\")) +\n  \n  annotate(\"label\", x=-7.5, y=-8, label=\"- offense \", color=\"black\",\n           fill = \"pink2\", label.size=0, size=3, vjust=.5) +\n  annotate(\"label\", x=-7.5, y=-9, label=\"- defense\", color=\"black\",\n           fill = \"pink2\", label.size=0, size=3, vjust=.5) +\n  annotate(\"label\", x=7.5, y=9, label=\"+ offense \", color=\"black\",\n           fill = \"cadetblue2\", label.size=0, size=3, vjust=.5) +\n  annotate(\"label\", x=7.5, y=8, label=\"+ defense\", color=\"black\",\n           fill = \"cadetblue2\", label.size=0, size=3, vjust=.5) +\n  annotate(\"label\", x=-7.5, y=9, label=\"- offense  \", color = \"black\",\n           fill = \"pink2\", label.size=0, size=3,  vjust=.5) +\n  annotate(\"label\", x=-7.5, y=8, label=\"+ defense\", color = \"black\",\n           fill = \"cadetblue2\", label.size=0, size=3, vjust=.5) +\n  annotate(\"label\", x=7.5, y=-8, label=\"+ offense\", color = \"black\",\n           fill = \"cadetblue2\", label.size=0, size=3, vjust=.5) +\n  annotate(\"label\", x=7.5, y=-9, label=\"- defense\", color = \"black\",\n           fill = \"pink2\", label.size=0, size=3, vjust=.5) +\n  \n  coord_fixed(ratio=1.15)+\n  \n  theme_minimal(base_size = 14) +\n  theme(panel.grid.major = element_line(color = \"gray90\", linewidth=.6),\n        panel.grid.minor = element_blank(),\n        panel.background = element_rect(fill = \"white\", color = NA),\n        plot.background = element_rect(fill = \"white\", color = NA),\n        axis.title = element_text(color=\"black\", size=10),\n        axis.text.x=element_text(color=\"gray50\", size=7.5, margin=margin(t=-3)),\n        axis.text.y=element_text(color=\"gray50\", size=7.5, margin=margin(t=-3)))\n\n\n\n\n\n\n\n\nI think my modified version looks more similar to the original figure on the website. Below I’m attaching the original one from the website for comparison.\n\n\n\n\n\n\n\nCreate a table using ChatGPT\nWith the widespread adoption of the “small ball” style in the NBA, the role of centers (position C) has evolved. The “small ball” strategy emphasizes speed, pace, and floor spacing, which exposes the traditional center’s lack of agility. I want to compare the RAPTOR indices of players who primarily play as centers versus those who do not.\nStill, I will start by asking ChatGPT to help me. My communication with ChatGPT and her code are attached below.\nMe: Next, I want to use this data to make a nice table output. I want to stratify observations by whether POSITION contains “C” (Center vs non-Center), and compare the median of variables from raptor_box_offense to war_total using Wilcoxon rank sum test. For the output table, the first column shows the name of these indices, labeled as “Box offense score”, “Box defense score”, “Box total score”, “On/Off offense score”, “On/Off defense score”, “On/Off total score”, “Comprehensive offense score”, “Comprehensive defense score”, “Comprehensive total score”, “Wins Above Replacement score” by order of the variables. The second column shows the median, 25th quantile, and 75th quantile of Center players (2 digits). The third column shows the histogram of the data in the second column by row (fill color: darkorange). The fourth column shows the median, 25th quantile, and 75th quantile of non-Center players (2 digits). The fifth column shows the histogram of the data in the fourth column by row (fill color: dodgerblue3). The last column shows the p-values (italic title) of test results (3 digits). The column titles for the two groups should be “Center” (color: darkorange) and “Non-Center” (color: dodgerblue3) and they should be bold. You can use packages such as gtsummary and gtExtras to do this.\nChatGPT: Here is the R code to create the formatted table using gtsummary, gt, and gtExtras. This will generate a stratified table comparing Centers vs. Non-Centers, including medians, interquartile ranges, histograms, and Wilcoxon test p-values.\n\n# ChatGPT gave me a code with error\n\nThis code will: Compare Centers vs. Non-Centers based on median and IQR. Display histograms for each group.Show Wilcoxon rank sum test p-values. Format the table with bold and colored group titles. Let me know if you need any refinements!\nMe: I just received an error about the ‘=’ in “Center = md(”Center”), Non-Center =“. Can you fix it?\nChatGPT: Here is the corrected R code. The issue was due to the Non-Center column name containing a hyphen (-). In gt(), column names with special characters should be enclosed in backticks (`). I’ve fixed that and ensured the table renders correctly.\n\n# Define variables of interest\nvars &lt;- c(\"raptor_box_offense\", \"raptor_box_defense\", \"raptor_box_total\",\n          \"raptor_onoff_offense\", \"raptor_onoff_defense\", \"raptor_onoff_total\",\n          \"raptor_offense\", \"raptor_defense\", \"raptor_total\", \"war_total\")\n\n# Rename for display\nvar_labels &lt;- c(\"Box offense score\", \"Box defense score\", \"Box total score\",\n                \"On/Off offense score\", \"On/Off defense score\", \"On/Off total score\",\n                \"Comprehensive offense score\", \"Comprehensive defense score\", \"Comprehensive total score\",\n                \"Wins Above Replacement score\")\n\n# Create Position Groups (Center vs. Non-Center)\ndata &lt;- data %&gt;%\n  mutate(Position_Group = ifelse(grepl(\"C\", POSITION), \"Center\", \"Non-Center\"))\n\n# Compute summary statistics\nsummary_data &lt;- data %&gt;%\n  group_by(Position_Group) %&gt;%\n  summarise(across(all_of(vars), list(\n    Median = ~ median(.x, na.rm = TRUE),\n    Q25 = ~ quantile(.x, 0.25, na.rm = TRUE),\n    Q75 = ~ quantile(.x, 0.75, na.rm = TRUE)\n  ))) %&gt;%\n  pivot_longer(-Position_Group, names_to = c(\"Variable\", \"Stat\"), names_sep = \"_\") %&gt;%\n  pivot_wider(names_from = Position_Group, values_from = value) %&gt;%\n  mutate(across(where(is.numeric), ~ round(.x, 2))) \n\nWarning: Expected 2 pieces. Additional pieces discarded in 30 rows [1, 2, 3, 4, 5, 6, 7,\n8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\nWarning: Values from `value` are not uniquely identified; output will contain list-cols.\n• Use `values_fn = list` to suppress this warning.\n• Use `values_fn = {summary_fun}` to summarise duplicates.\n• Use the following dplyr code to identify duplicates.\n  {data} |&gt;\n  dplyr::summarise(n = dplyr::n(), .by = c(Variable, Stat, Position_Group)) |&gt;\n  dplyr::filter(n &gt; 1L)\n\n# Compute Wilcoxon p-values\np_values &lt;- data %&gt;%\n  summarise(across(all_of(vars), ~ wilcox.test(.x ~ Position_Group, data = data)$p.value)) %&gt;%\n  pivot_longer(everything(), names_to = \"Variable\", values_to = \"P_Value\") %&gt;%\n  mutate(P_Value = formatC(P_Value, format = \"f\", digits = 3)) \n\n# Merge summaries and p-values\ntable_data &lt;- summary_data %&gt;%\n  left_join(p_values, by = \"Variable\") %&gt;%\n  mutate(Variable = factor(Variable, levels = vars, labels = var_labels))\n\n# Create gt table\ntable_gt &lt;- table_data %&gt;%\n  gt(rowname_col = \"Variable\") %&gt;%\n  tab_spanner(label = md(\"**Center**\"), columns = `Center`) %&gt;%\n  tab_spanner(label = md(\"**Non-Center**\"), columns = `Non-Center`) %&gt;%\n  cols_label(\n    Variable = \"Statistic\",\n    `Center` = md(\"**Center**\"),\n    `Non-Center` = md(\"**Non-Center**\"),\n    P_Value = md(\"*P-value*\")\n  ) %&gt;%\n  tab_options(table.font.size = \"medium\")\n\n# Display table\ntable_gt\n\n\n\n\n\n\n\n\nStat\nCenter\nNon-Center\nP-value\n\n\nCenter\nNon-Center\n\n\n\n\nNA\nbox\n-0.90, -1.70, 0.20, 1.10, -0.15, 2.25, 0.40, -1.50, 2.00\n0.10, -1.10, 1.65, -0.20, -1.20, 0.70, 0.00, -1.50, 1.80\nNA\n\n\nNA\nonoff\n0.50, -0.45, 2.15, -0.20, -1.75, 1.35, 0.00, -2.10, 3.40\n0.30, -1.50, 2.10, 0.00, -1.40, 1.50, 0.20, -1.60, 2.65\nNA\n\n\nNA\noffense\n-0.50, -1.60, 0.45\n-0.1, -1.0, 1.8\nNA\n\n\nNA\ndefense\n1.00, -0.55, 2.15\n-0.2, -1.2, 0.8\nNA\n\n\nNA\ntotal\n0.60, -1.55, 2.00\n0.0, -1.5, 2.0\nNA\n\n\nNA\ntotal\n2.90, 1.05, 5.35\n2.80, 1.10, 5.15\nNA\n\n\n\n\n\n\n\nFixes: Used backticks (`) for column names with special characters (Non-Center). Used tab_spanner() to ensure correct formatting of group headers. This should now work as expected. Let me know if you need further refinements!\nMe: Thank you for your help. But what you gave me doesn’t meet my requirements. If I use what you just sent me, it could be a stain on my career. Actually I know how to make polished tables. I will do it myself. But still thanks.\nChatGPT: I appreciate your honesty, and I understand the importance of precision in your work. If you need any refinements or specific adjustments, feel free to let me know. Best of luck with your analysis, and I’m always here to help when needed.\nThe table that ChatGPT gave me is not right. Then I realized that this cannot be done using gt family packages. I don’t think it is even doable. Guess this is too hard for R. So, no blame on ChatGPT.\nActually, to make plots using gt family packages, the data to be plotted must be stored in lists. However, if I create new columns of lists, tbl_summary won’t be able to deal with it and generate a summary table. I will accomplish it in two steps. I will firstly generate a table with comparisons between the two groups. Then I will create another table that contains the density plots I want.\n\n# Create Position Groups (Center vs. Non-Center)\ndata &lt;- data %&gt;%\n  mutate(Group=ifelse(grepl(\"C\", POSITION), \"Center players\", \"Non-Center players\"))\n\n# Make the first table\nnba_tab &lt;- data %&gt;% \n  select(Group, raptor_box_offense:war_total) %&gt;%\n  tbl_summary(by=Group, type=list(where(is.numeric) ~ \"continuous\"),\n              statistic=list(all_continuous() ~ \"{median} ({p25}, {p75})\"),\n              digits=all_continuous() ~ 2,\n              label=list(raptor_box_offense ~ \"Box offense score\",\n                         raptor_box_defense ~ \"Box defense score\",\n                         raptor_box_total ~ \"Box total score\",\n                         raptor_onoff_offense ~ \"On/Off offense score\",\n                         raptor_onoff_defense ~ \"On/Off defense score\",\n                         raptor_onoff_total ~ \"On/Off total score\",\n                         raptor_offense ~ \"Comprehensive offense score\",\n                         raptor_defense ~ \"Comprehensive defense score\",\n                         raptor_total ~ \"Comprehensive total score\",\n                         war_total ~ \"Wins Above Replacement score\")) %&gt;%\n  add_p(test=all_continuous() ~ \"wilcox.test\", pvalue_fun=function(x) style_number(x, digits=3)) %&gt;%\n  modify_header(label=\"**Index**\", p.value=\"*p*-value\") %&gt;%\n  as_gt() %&gt;%\n  tab_style_body(style=cell_fill(color=\"lightskyblue1\"), values=\"Box total score\") %&gt;% \n  tab_style_body(style=cell_fill(color=\"palevioletred1\"), values=\"On/Off total score\") %&gt;%\n  tab_style_body(style=cell_fill(color=\"palegreen1\"), values=\"Comprehensive total score\") %&gt;%\n  tab_style_body(style=cell_fill(color=\"gold1\"), values=\"Wins Above Replacement score\") %&gt;%\n  tab_style(style=cell_text(weight=\"bold\"), \n            locations=cells_body(columns=p.value, rows=as.numeric(p.value)&lt;0.05)) %&gt;%\n  tab_options(table.font.names=\"Times New Roman\")\n\n# Output the table\nnba_tab\n\n\n\n\n\n\n\nIndex\nCenter players, N = 551\nNon-Center players, N = 1951\np-value2\n\n\n\n\nBox offense score\n-0.90 (-1.70, 0.20)\n0.10 (-1.10, 1.65)\n0.001\n\n\nBox defense score\n1.10 (-0.15, 2.25)\n-0.20 (-1.20, 0.70)\n0.000\n\n\nBox total score\n0.40 (-1.50, 2.00)\n0.00 (-1.50, 1.80)\n0.702\n\n\nOn/Off offense score\n0.50 (-0.45, 2.15)\n0.30 (-1.50, 2.10)\n0.255\n\n\nOn/Off defense score\n-0.20 (-1.75, 1.35)\n0.00 (-1.40, 1.50)\n0.652\n\n\nOn/Off total score\n0.00 (-2.10, 3.40)\n0.20 (-1.60, 2.65)\n0.708\n\n\nComprehensive offense score\n-0.50 (-1.60, 0.45)\n-0.10 (-1.00, 1.80)\n0.022\n\n\nComprehensive defense score\n1.00 (-0.55, 2.15)\n-0.20 (-1.20, 0.80)\n0.000\n\n\nComprehensive total score\n0.60 (-1.55, 2.00)\n0.00 (-1.50, 2.00)\n0.615\n\n\nWins Above Replacement score\n2.90 (1.05, 5.35)\n2.80 (1.10, 5.15)\n0.859\n\n\n\n1 Median (IQR)\n\n\n2 Wilcoxon rank sum test\n\n\n\n\n\n\n\n\n\n# Make the second table\n# nba_tab_c &lt;- data %&gt;% \n#   select(Group, raptor_box_offense:war_total) %&gt;%\n#   pivot_longer(-Group, names_to=\"vars\", values_to=\"vals\") %&gt;%\n#   mutate(vars=recode(vars, \n#                      raptor_box_offense=\"Box Offense Score\",\n#                      raptor_box_defense=\"Box Defense Score\",\n#                      raptor_box_total=\"Box Total Score\",\n#                      raptor_onoff_offense=\"On/Off Offense Score\",\n#                      raptor_onoff_defense=\"On/Off Defense Score\",\n#                      raptor_onoff_total=\"On/Off Total Score\",\n#                      raptor_offense=\"Comprehensive Offense Score\",\n#                      raptor_defense=\"Comprehensive Defense Score\",\n#                      raptor_total=\"Comprehensive Total Score\",\n#                      war_total=\"Wins Above Replacement Score\")) %&gt;%\n#   group_by(Group, vars) %&gt;%\n#   summarize(median=round(median(vals), 2),\n#             Q1=round(quantile(vals, .25), 2),\n#             Q3=round(quantile(vals, .75), 2),\n#             datalist=list(vals)) %&gt;%\n#   gt() %&gt;%\n#   gt_plt_dist(datalist, type=\"density\", \n#               line_color=\"firebrick4\", fill_color=\"lightpink1\", \n#               same_limit=F) %&gt;%\n#   tab_style(style=cell_fill(color=\"lightskyblue\"),\n#             locations=cells_body(rows=Group==\"Center players\")) %&gt;%\n#   tab_style(style=cell_fill(color=\"lightgreen\"), \n#             locations=cells_body(rows=Group==\"Non-Center players\")) %&gt;%\n#   cols_label(vars=md(\"**Index**\"), \n#              median=md(\"**Median**\"), \n#              Q1=md(\"**25th Percentile**\"), \n#              Q3=md(\"**75th Percentile**\"),\n#              datalist=md(\"**Density Plot**\")) %&gt;%\n#   tab_options(table.font.names=\"Times New Roman\")\n\n# Ouput the table\n# nba_tab_c\n\nThe code chunk above runs perfectly on my local lap-top. However, whenever I tried to render it into HTML, it keeps saying cannot find the package “gtExtras”. I checked everything to make sure this package is accurately installed in my library folder. It just wouldn’t work.\nI searched the Internet and didn’t find anybody doing the same thing as I’m doing. It has taken me over 40 hrs to solve it so I decided not to be stuck here. I will just make another version of table with plots in it.\n\n# Make the second table in a different way\nnba_tab_c &lt;- data %&gt;%\n  select(Group, raptor_box_offense:war_total) %&gt;%\n  pivot_longer(-Group, names_to=\"vars\", values_to=\"vals\") %&gt;%\n  mutate(vars=recode(vars,\n                     raptor_box_offense=\"Box Offense Score\",\n                     raptor_box_defense=\"Box Defense Score\",\n                     raptor_box_total=\"Box Total Score\",\n                     raptor_onoff_offense=\"On/Off Offense Score\",\n                     raptor_onoff_defense=\"On/Off Defense Score\",\n                     raptor_onoff_total=\"On/Off Total Score\",\n                     raptor_offense=\"Comprehensive Offense Score\",\n                     raptor_defense=\"Comprehensive Defense Score\",\n                     raptor_total=\"Comprehensive Total Score\",\n                     war_total=\"Wins Above Replacement Score\")) %&gt;%\n  nest_by(Group, vars) %&gt;%\n  mutate(median=round(median(data$vals), 2),\n         Q1=round(quantile(data$vals, .25), 2),\n         Q3=round(quantile(data$vals, .75), 2),\n         dens=list(ggplot(data, aes(vals))+\n                     geom_density(color=\"purple4\",\n                                  fill=\"palevioletred1\")+\n                     theme_void()), .keep=\"unused\") %&gt;%\n  ungroup %&gt;%\n  mutate(ggplot=NA) %&gt;%\n  {dat &lt;- .\n  dat %&gt;%\n    select(-dens) %&gt;%\n    gt() %&gt;%\n    text_transform(locations=cells_body(c(ggplot)),\n                 fn=function(x){map(dat$dens, ggplot_image, height=50)})\n  } %&gt;%\n  tab_style(style=cell_fill(color=\"lightskyblue1\", alpha=.2),\n            locations=cells_body(rows=Group==\"Center players\")) %&gt;%\n  tab_style(style=cell_fill(color=\"palegreen1\", alpha=.2),\n            locations=cells_body(rows=Group==\"Non-Center players\")) %&gt;%\n  cols_label(vars=md(\"**Index**\"),\n             median=md(\"**Median**\"),\n             Q1=md(\"**25th Percentile**\"),\n             Q3=md(\"**75th Percentile**\"),\n             ggplot=md(\"**Density Plot**\")) %&gt;%\n  tab_options(table.font.names=\"Times New Roman\")\n\n# Ouput the table\nnba_tab_c\n\n\n\n\n\n\n\nGroup\nIndex\nMedian\n25th Percentile\n75th Percentile\nDensity Plot\n\n\n\n\nCenter players\nBox Defense Score\n1.1\n-0.15\n2.25\n\n\n\nCenter players\nBox Offense Score\n-0.9\n-1.70\n0.20\n\n\n\nCenter players\nBox Total Score\n0.4\n-1.50\n2.00\n\n\n\nCenter players\nComprehensive Defense Score\n1.0\n-0.55\n2.15\n\n\n\nCenter players\nComprehensive Offense Score\n-0.5\n-1.60\n0.45\n\n\n\nCenter players\nComprehensive Total Score\n0.6\n-1.55\n2.00\n\n\n\nCenter players\nOn/Off Defense Score\n-0.2\n-1.75\n1.35\n\n\n\nCenter players\nOn/Off Offense Score\n0.5\n-0.45\n2.15\n\n\n\nCenter players\nOn/Off Total Score\n0.0\n-2.10\n3.40\n\n\n\nCenter players\nWins Above Replacement Score\n2.9\n1.05\n5.35\n\n\n\nNon-Center players\nBox Defense Score\n-0.2\n-1.20\n0.70\n\n\n\nNon-Center players\nBox Offense Score\n0.1\n-1.10\n1.65\n\n\n\nNon-Center players\nBox Total Score\n0.0\n-1.50\n1.80\n\n\n\nNon-Center players\nComprehensive Defense Score\n-0.2\n-1.20\n0.80\n\n\n\nNon-Center players\nComprehensive Offense Score\n-0.1\n-1.00\n1.80\n\n\n\nNon-Center players\nComprehensive Total Score\n0.0\n-1.50\n2.00\n\n\n\nNon-Center players\nOn/Off Defense Score\n0.0\n-1.40\n1.50\n\n\n\nNon-Center players\nOn/Off Offense Score\n0.3\n-1.50\n2.10\n\n\n\nNon-Center players\nOn/Off Total Score\n0.2\n-1.60\n2.65\n\n\n\nNon-Center players\nWins Above Replacement Score\n2.8\n1.10\n5.15"
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(here) #to set paths\n\nhere() starts at C:/Users/86182/Desktop/EPID 8060E/MADA/GuozhengYang-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Users/86182/Desktop/EPID 8060E/MADA/GuozhengYang-MADA-portfolio\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 Major                 0             1   4  10     0        5          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate    mean      sd    p0   p25   p50   p75\n1 Height                0             1   166.     16.0   133   156   166   178\n2 Weight                0             1    70.1    21.2    45    55    70    80\n3 Salary                0             1 75588.  20804.  49877 65012 66685 90400\n    p100 hist \n1    183 ▂▁▃▃▇\n2    110 ▇▂▃▂▂\n3 109841 ▅▇▂▅▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\np5 &lt;- mydata %&gt;% ggplot(aes(x=Major, y=Height, color = Major)) + geom_boxplot()\nplot(p5)\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"major-height-boxplot.png\")\nggsave(filename = figure_file, plot=p5) \n\nSaving 7 x 5 in image\n\n\n\np6 &lt;- mydata %&gt;% ggplot(aes(x=Weight, y=Salary)) + geom_point()\nplot(p6)\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-salary-scatter.png\")\nggsave(filename = figure_file, plot=p6) \n\nSaving 7 x 5 in image\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Users/86182/Desktop/EPID 8060E/MADA/GuozhengYang-MADA-portfolio\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(here) #to set paths\n\nhere() starts at C:/Users/86182/Desktop/EPID 8060E/MADA/GuozhengYang-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`        \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                   \n1 Height          height in centimeters                 numeric value &gt;0 or NA  \n2 Weight          weight in kilograms                   numeric value &gt;0 or NA  \n3 Gender          identified gender (male/female/other) M/F/O/NA                \n4 Salary          annual salary in USD                  numeric value &gt;0 or NA  \n5 Major           Undergraduate major                   Economics/Statistics/Ma…\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n$ Salary &lt;dbl&gt; 90400, 65012, 120536, 109841, 78887, 66685, 49877, 96021, 83254…\n$ Major  &lt;chr&gt; \"Economics\", \"Statistics\", \"Economics\", \"Math\", \"History\", \"Sta…\n\nsummary(rawdata)\n\n    Height              Weight          Gender              Salary      \n Length:14          Min.   :  45.0   Length:14          Min.   : 49877  \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.: 65736  \n Mode  :character   Median :  70.0   Mode  :character   Median : 84523  \n                    Mean   : 602.7                      Mean   : 94114  \n                    3rd Qu.:  90.0                      3rd Qu.:106386  \n                    Max.   :7000.0                      Max.   :198003  \n                    NA's   :1                                           \n    Major          \n Length:14         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender Salary Major     \n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;     \n1 180        80 M       90400 Economics \n2 175        70 O       65012 Statistics\n3 sixty      60 F      120536 Economics \n4 178        76 F      109841 Math      \n5 192        90 NA      78887 History   \n6 6          55 F       66685 Statistics\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nMajor\n0\n1\n4\n10\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55.00\n70\n90\n7000\n▇▁▁▁▁\n\n\nSalary\n0\n1.00\n94113.86\n41416.54\n49877\n65736.25\n84523\n106386\n198003\n▇▅▂▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nMajor\n0\n1\n4\n10\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nSalary\n0\n1.00\n92081.38\n42374.77\n49877\n65420.00\n83254\n96021\n198003\n▇▅▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nMajor\n0\n1\n4\n10\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nSalary\n0\n1.00\n92081.38\n42374.77\n49877\n65420.00\n83254\n96021\n198003\n▇▅▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nMajor\n0\n1\n4\n10\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nSalary\n0\n1\n76584.91\n18764.73\n49877\n65216.0\n78887\n88096\n109841\n▅▇▇▅▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nMajor\n0\n1\n4\n10\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nSalary\n0\n1\n76584.91\n18764.73\n49877\n65216.0\n78887\n88096\n109841\n▅▇▇▅▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nMajor\n0\n1\n4\n10\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nSalary\n0\n1\n75588.11\n20803.95\n49877\n65012\n66685\n90400\n109841\n▅▇▂▅▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "Vincent Nguyen contributed to this exercise!!!\nThanks for help from Alexis Gonzalez and Hope Grismer!!!\nLET’S GO GROUP 3!!!\nThe structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nDescribe what the data is, what it contains, where it is from, etc. Eventually this might be part of a methods section. I added two more columns to the data file, namely Salary and Major. The Salary column contains annual salaries as numeric values. The Major column has categorical values denoting different majors."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\ncharacter.min\ncharacter.max\ncharacter.empty\ncharacter.n_unique\ncharacter.whitespace\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\ncharacter\nMajor\n0\n1\n4\n10\n0\n5\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfactor\nGender\n0\n1\nNA\nNA\nNA\nNA\nNA\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nnumeric\nSalary\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n75588.11111\n20803.94505\n49877\n65012\n66685\n90400\n109841\n▅▇▂▅▂"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#boxplot-of-height-major",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#boxplot-of-height-major",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "6.1 Boxplot of Height ~ Major",
    "text": "6.1 Boxplot of Height ~ Major\nTo explore if the distribution of height has difference across different majors, we made a boxplot of height grouped by major. As shown, observations whose major is Economics, Math, or Statistics have a higher height compared to those whose major is Biology or History. However, only a few observations were left after data cleaning. According to the plot, only one observation was left for Biology, Economics, and History. The too small sample size makes the finding not convincing.\nFigure 2 shows the boxplot of height grouped by major.\n\n\n\n\n\n\n\n\nFigure 2: Height stratified by major."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#scatterplot-of-salary-weight",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#scatterplot-of-salary-weight",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "6.2 Scatterplot of Salary ~ Weight",
    "text": "6.2 Scatterplot of Salary ~ Weight\nThe scatterplot below shows the relationship between salary and weight. There is generally a positive association between salary and weight. However, the variance is not constant as the variation in salary is greater at higher weights. A logarithmic transformation for salary could possibly solve this problem as the two variables are not on the same scale.\nFigure 3 shows the scatterplot of salary and weight.\n\n\n\n\n\n\n\n\nFigure 3: Height stratified by major."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  }
]