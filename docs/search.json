[
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html",
    "href": "cdcdata-exercise/cdcdata-exercise.html",
    "title": "Data Analysis Exercise",
    "section": "",
    "text": "Below is an exercise for analyzing a dataset from the CDC website."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#death_total",
    "href": "cdcdata-exercise/cdcdata-exercise.html#death_total",
    "title": "Data Analysis Exercise",
    "section": "death_total",
    "text": "death_total\nLet’s start from death_total. As its scale is too large, I will take the log-transformation first.\n\n# Histogram of log death_total\nhist_death_total &lt;- ggplot(data, aes(x=log(death_total, 10)))+\n  geom_histogram(binwidth=.1, fill=\"firebrick1\", color=\"black\", alpha=.8)+\n  labs(x=\"Log - Total deaths\", y=\"Count\")+\n  theme_bw()+\n  theme(axis.title.x=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.title.y=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.text.x=element_text(color=\"black\", size=12),\n        axis.text.y=element_text(color=\"black\", size=12))\nhist_death_total\n\n\n\n\n\n\n\n\nAccording to the histogram, log-transformed death_total is left skewed, with one obvious peak. It could be a weibull distribution or a gamma distribution. Now I want to fit this two distribution and select the best one based on log-likelihood value.\n\n# Fit weibull distribution for log death_total\nfit_wb &lt;- fitdist(log(data$death_total, 10), \"weibull\")\nsummary(fit_wb)\n\nFitting of the distribution ' weibull ' by maximum likelihood \nParameters : \n      estimate  Std. Error\nshape 9.025147 0.124622061\nscale 3.703996 0.007768309\nLoglikelihood:  -1890.841   AIC:  3785.681   BIC:  3797.766 \nCorrelation matrix:\n          shape     scale\nshape 1.0000000 0.3207625\nscale 0.3207625 1.0000000\n\n\n\n# Fit gamma distribution for log death_total\nfit_gm &lt;- fitdist(log(data$death_total, 10), \"gamma\")\nsummary(fit_gm)\n\nFitting of the distribution ' gamma ' by maximum likelihood \nParameters : \n      estimate Std. Error\nshape 59.95946  1.5160752\nrate  17.08149  0.4337126\nLoglikelihood:  -1935.506   AIC:  3875.011   BIC:  3887.097 \nCorrelation matrix:\n          shape      rate\nshape 1.0000000 0.9958336\nrate  0.9958336 1.0000000\n\n\nAccording to two fitting results, the weibull distribution can better fit the log-transformed death_total (log-likelihood=-1890.841 vs -1935.506). The shape parameter is 9.03 and the scale parameter is 3.70."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#death_pna",
    "href": "cdcdata-exercise/cdcdata-exercise.html#death_pna",
    "title": "Data Analysis Exercise",
    "section": "death_pna",
    "text": "death_pna\nNow, let’s repeat the above steps for death_pna. Again, this variable will be log-transformed.\n\n# Histogram of log death_pna\nhist_death_pna &lt;- ggplot(data, aes(x=log(death_pna, 10)))+\n  geom_histogram(binwidth=.1, fill=\"skyblue1\", color=\"black\", alpha=.8)+\n  labs(x=\"Log - Pneumonia deaths\", y=\"Count\")+\n  theme_bw()+\n  theme(axis.title.x=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.title.y=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.text.x=element_text(color=\"black\", size=12),\n        axis.text.y=element_text(color=\"black\", size=12))\nhist_death_pna\n\n\n\n\n\n\n\n\nThough there is likely a bimodal pattern, this variable is generally symmetric and likely to follow a normal distribution. Now I will fit a normal distribution to this variable and estimate the parameters.\n\n# Fit normal distribution for log death_pna\nfit_norm &lt;- fitdist(log(data$death_pna, 10), \"norm\")\nsummary(fit_norm)\n\nFitting of the distribution ' norm ' by maximum likelihood \nParameters : \n      estimate  Std. Error\nmean 2.3610877 0.009098526\nsd   0.5074825 0.006433517\nLoglikelihood:  -2304.148   AIC:  4612.296   BIC:  4624.381 \nCorrelation matrix:\n     mean sd\nmean    1  0\nsd      0  1\n\n\nHence, the log-transformed death_pna is likely to follow a normal distribution with mean=2.36 and sd=0.51."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#death_flu",
    "href": "cdcdata-exercise/cdcdata-exercise.html#death_flu",
    "title": "Data Analysis Exercise",
    "section": "death_flu",
    "text": "death_flu\nNext, let’s get the histogram for death_flu. As a great proportion of values in this variable are 0, I will take the distribution of this variable hierarchically: 1. determine the probability of 0 vs &gt;0 values; 2. determine the distribution of &gt;0 values. Let’s generate an indicator variable to check how many values are 0.\n\n# Generate an indicator variable for death_flu\n# Estimate the probability for 0 vs &gt;0\ndata2 &lt;- data %&gt;% \n  mutate(death_flu01=ifelse(death_flu==0, 0, 1)) %&gt;%\n  filter(!is.na(death_flu01))\n\nbar_death_flu01 &lt;- ggplot(data2, aes(x=factor(death_flu01)))+\n  geom_bar(aes(y=..count../sum(..count..)), fill=\"darkorange\", color=\"black\", width=.5)+\n  geom_text(aes(y=..count../sum(..count..), label=scales::percent(..count../sum(..count..))), \n            stat=\"count\", size=5, vjust=1.5, fontface=\"bold\")+\n  scale_x_discrete(breaks=c(0, 1), labels=c(\"0\", \"&gt;0\"))+\n  scale_y_continuous(labels=scales::percent_format())+\n  labs(x=\"Log - Influenza deaths: 0 vs &gt;0\", y=\"Proportion\")+\n  theme_bw()+\n  theme(axis.title.x=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.title.y=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.text.x=element_text(color=\"black\", size=12),\n        axis.text.y=element_text(color=\"black\", size=12))\nbar_death_flu01\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\n\n\n\n\nAs shown, the probability for 0 influenza deaths is 0.52, which is also the estimate for a binomial distribution. For &gt;0 influenza deaths, I will make a histogram to show its distribution.\n\n# Filter out death_flu &gt; 0\n# Make a histogram for the &gt;0 values\ndata3 &lt;- data2 %&gt;% filter(death_flu01==1)\n\nhist_death_flu1 &lt;- ggplot(data3, aes(x=log(death_flu, 10)))+\n  geom_histogram(binwidth=.1, fill=\"seagreen2\", color=\"black\", alpha=.8)+\n  labs(x=\"Log - Influenza deaths\", y=\"Count\")+\n  theme_bw()+\n  theme(axis.title.x=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.title.y=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.text.x=element_text(color=\"black\", size=12),\n        axis.text.y=element_text(color=\"black\", size=12))\nhist_death_flu1\n\n\n\n\n\n\n\n\nAccording to the histogram above, the &gt;0 influenza deaths generally follows a weibull or a gamma distribution. Still, I will fit both and determine the best fit by log-likelihood.\n\n# Fit weibull distribution for &gt;0 log death_flu\nfit_wb2 &lt;- fitdist(log(data3$death_flu, 10), \"weibull\")\nsummary(fit_wb2)\n\nFitting of the distribution ' weibull ' by maximum likelihood \nParameters : \n      estimate Std. Error\nshape 4.445396  0.1202325\nscale 1.591791  0.0139997\nLoglikelihood:  -274.4729   AIC:  552.9458   BIC:  562.151 \nCorrelation matrix:\n          shape     scale\nshape 1.0000000 0.3352461\nscale 0.3352461 1.0000000\n\n\n\n# Fit gamma distribution for &gt;0 log death_flu\nfit_gm2 &lt;- fitdist(log(data3$death_flu, 10), \"gamma\")\nsummary(fit_gm2)\n\nFitting of the distribution ' gamma ' by maximum likelihood \nParameters : \n      estimate Std. Error\nshape 19.19297  0.9912574\nrate  13.18830  0.6901021\nLoglikelihood:  -220.5901   AIC:  445.1802   BIC:  454.3854 \nCorrelation matrix:\n         shape     rate\nshape 1.000000 0.987006\nrate  0.987006 1.000000\n\n\nAs shown, the gamma distribution is better when influenza deaths is &gt;0 (log-likelihood=-220 vs-274). The estimated shape parameter is 19.19 and the rate parameter is 13.19."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#death_covid",
    "href": "cdcdata-exercise/cdcdata-exercise.html#death_covid",
    "title": "Data Analysis Exercise",
    "section": "death_covid",
    "text": "death_covid\nNext, let’s do the same thing to death_covid. As not too many values are 0, I will just add 1 to each value in this variable. Based on its scale and the log-transformation, adding 1 will not make a big change to it. Let’s start by cleaning the NAs and making a histogram.\n\n# Clean the missing values in death_covid\ndata4 &lt;- data %&gt;% filter(!is.na(death_covid))\n\n# Histogram of log death_covid+1\nhist_death_covid &lt;- ggplot(data4, aes(x=log(death_covid+1, 10)))+\n  geom_histogram(binwidth=.2, fill=\"palevioletred\", color=\"black\", alpha=.8)+\n  labs(x=\"Log - COVID deaths\", y=\"Count\")+\n  theme_bw()+\n  theme(axis.title.x=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.title.y=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.text.x=element_text(color=\"black\", size=12),\n        axis.text.y=element_text(color=\"black\", size=12))\nhist_death_covid\n\n\n\n\n\n\n\n\nAccording to the histogram, the log-transformed death_covid is generally normally distributed. I will fit a normal distribution to it and estimate the parameters.\n\n# Fit normal distribution for log death_covid+1\nfit_norm2 &lt;- fitdist(log(data4$death_covid+1, 10), \"norm\")\nsummary(fit_norm2)\n\nFitting of the distribution ' norm ' by maximum likelihood \nParameters : \n      estimate Std. Error\nmean 2.0842417 0.01312792\nsd   0.7130286 0.00928276\nLoglikelihood:  -3188.079   AIC:  6380.158   BIC:  6392.137 \nCorrelation matrix:\n     mean sd\nmean    1  0\nsd      0  1\n\n\nHence, the log-transformed death_covid is likely to follow a normal distribution with mean=2.08 and sd=0.71."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#death_pna_covid",
    "href": "cdcdata-exercise/cdcdata-exercise.html#death_pna_covid",
    "title": "Data Analysis Exercise",
    "section": "death_pna_covid",
    "text": "death_pna_covid\nAgain, the same thing for death_pna_covid. I will clean the NAs first and then add 1 to this variable.\n\n# Clean the missing values in death_pna_covid\ndata5 &lt;- data %&gt;% filter(!is.na(death_pna_covid))\n\n# Histogram of log death_pna_covid+1\nhist_death_pna_covid &lt;- ggplot(data5, aes(x=log(death_pna_covid+1, 10)))+\n  geom_histogram(binwidth=.2, fill=\"steelblue4\", color=\"black\", alpha=.8)+\n  labs(x=\"Log - Pneumonia & COVID deaths\", y=\"Count\")+\n  theme_bw()+\n  theme(axis.title.x=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.title.y=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.text.x=element_text(color=\"black\", size=12),\n        axis.text.y=element_text(color=\"black\", size=12))\nhist_death_pna_covid\n\n\n\n\n\n\n\n\nSince it’s generally a bell shape, I will estimate the mean and sd for the normal distribution.\n\n# Fit normal distribution for log death_pna_covid+1\nfit_norm3 &lt;- fitdist(log(data5$death_pna_covid+1, 10), \"norm\")\nsummary(fit_norm3)\n\nFitting of the distribution ' norm ' by maximum likelihood \nParameters : \n      estimate  Std. Error\nmean 1.8217539 0.013730000\nsd   0.6987477 0.009708486\nLoglikelihood:  -2746.625   AIC:  5497.25   BIC:  5508.969 \nCorrelation matrix:\n     mean sd\nmean    1  0\nsd      0  1\n\n\nHence, the log-transformed death_pna_covid is likely to follow a normal distribution with mean=1.82 and sd=0.70."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#death_pna_flu_covid",
    "href": "cdcdata-exercise/cdcdata-exercise.html#death_pna_flu_covid",
    "title": "Data Analysis Exercise",
    "section": "death_pna_flu_covid",
    "text": "death_pna_flu_covid\nLast, for death_pna_flu_covid, no NAs or 0s exist. I will directly make a histogram for it.\n\n# Histogram of log death_pna_flu_covid\nhist_death_pna_flu_covid &lt;- ggplot(data, aes(x=log(death_pna_flu_covid, 10)))+\n  geom_histogram(binwidth=.1, fill=\"darkseagreen3\", color=\"black\", alpha=.8)+\n  labs(x=\"Log - Pneumonia & Influenza & COVID deaths\", y=\"Count\")+\n  theme_bw()+\n  theme(axis.title.x=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.title.y=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.text.x=element_text(color=\"black\", size=12),\n        axis.text.y=element_text(color=\"black\", size=12))\nhist_death_pna_flu_covid\n\n\n\n\n\n\n\n\nAs shown in the histogram, it generally looks like a normal distribution. Now I’m estimating the parameters for this normal distribution.\n\n# Fit normal distribution for log death_pna_flu_covid\nfit_norm4 &lt;- fitdist(log(data$death_pna_flu_covid, 10), \"norm\")\nsummary(fit_norm4)\n\nFitting of the distribution ' norm ' by maximum likelihood \nParameters : \n      estimate  Std. Error\nmean 2.4999735 0.009433313\nsd   0.5261557 0.006670251\nLoglikelihood:  -2416.564   AIC:  4837.128   BIC:  4849.213 \nCorrelation matrix:\n     mean sd\nmean    1  0\nsd      0  1\n\n\nHence, the log-transformed death_pna_flu_covid is likely to follow a normal distribution with mean=2.50 and sd=0.53."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#hopes-contribution-and-additions---synthetic-data-and-new-figures-that-mirrors-guozhengs-original-work",
    "href": "cdcdata-exercise/cdcdata-exercise.html#hopes-contribution-and-additions---synthetic-data-and-new-figures-that-mirrors-guozhengs-original-work",
    "title": "Data Analysis Exercise",
    "section": "Hope’s Contribution and Additions - Synthetic Data and New Figures that Mirrors Guozheng’s Original Work",
    "text": "Hope’s Contribution and Additions - Synthetic Data and New Figures that Mirrors Guozheng’s Original Work\nThe dataset below is synthetic data that parodies the “Provisional COVID-19 Death Counts by Week Ending Date and State” data set as shown above.\nThis synthetic data contains 60 observations of 9 variables including the year during which the deaths were recorded, the month (during which the deaths were recorded), the state or jurisdiction where the deaths occurred, the total number of deaths from all causes, including COVID-19, pneumonia, and influenza (death_total), the number of deaths specifically due to pneumonia (death_pna), the number of deaths specifically due to influenza (death_flu), the number of deaths specifically due to COVID-19 (death_covid), the number of deaths where both pneumonia and COVID-19 were involved (death_pna_covid), and the number of deaths where pneumonia, influenza, and COVID-19 were involved (death_pna_flu_covid).\n\n# Load required packages\nlibrary(fitdistrplus) # To fit distributions\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n# Set seed for reproducibility\nset.seed(42)\n\n#Create synthetic data\nsynthetic_data &lt;- tibble(\n  Year = rep(2020:2024, each = 12),\n  Month = rep(1:12, times = 5),\n  State = rep(c(\"California\", \"Texas\", \"Florida\", \"New York\", \"Illinois\"), times = 12),\n  COVID.19.Deaths = round(rpois(60, lambda = 500)),\n  Total.Deaths = round(rpois(60, lambda = 2000)),\n  Pneumonia.Deaths = round(rpois(60, lambda = 300)),\n  Pneumonia.and.COVID.19.Deaths = round(rpois(60, lambda = 150)),\n  Influenza.Deaths = round(rpois(60, lambda = 50)),\n  Pneumonia..Influenza..or.COVID.19.Deaths = round(rpois(60, lambda = 600))\n)\n\nFirst, the data was cleaned and formatted with the help of AI tools.\nA summary of the cleaned synthetic data is located in the print out below.\n\n#Clean and format the data - helped with AI tools!\nsynthetic_data &lt;- synthetic_data %&gt;%\n  mutate(Year = as.character(Year),\n         Month = as.character(Month),\n         State = as.character(State),\n         death_covid = COVID.19.Deaths,\n         death_total = Total.Deaths,\n         death_pna = Pneumonia.Deaths,\n         death_pna_covid = Pneumonia.and.COVID.19.Deaths,\n         death_flu = Influenza.Deaths,\n         death_pna_flu_covid = Pneumonia..Influenza..or.COVID.19.Deaths) %&gt;%\n  select(Year, Month, State, death_total, death_pna, death_flu, death_covid, death_pna_covid, death_pna_flu_covid)\n\n#Summary statistics\nsummary(synthetic_data)\n\n     Year              Month              State            death_total  \n Length:60          Length:60          Length:60          Min.   :1905  \n Class :character   Class :character   Class :character   1st Qu.:1960  \n Mode  :character   Mode  :character   Mode  :character   Median :1990  \n                                                          Mean   :1993  \n                                                          3rd Qu.:2028  \n                                                          Max.   :2071  \n   death_pna       death_flu      death_covid    death_pna_covid\n Min.   :251.0   Min.   :38.00   Min.   :433.0   Min.   :126.0  \n 1st Qu.:289.8   1st Qu.:46.00   1st Qu.:485.8   1st Qu.:138.0  \n Median :299.0   Median :49.00   Median :504.0   Median :147.5  \n Mean   :299.3   Mean   :50.15   Mean   :502.8   Mean   :148.0  \n 3rd Qu.:310.0   3rd Qu.:54.25   3rd Qu.:516.0   3rd Qu.:156.0  \n Max.   :340.0   Max.   :68.00   Max.   :551.0   Max.   :180.0  \n death_pna_flu_covid\n Min.   :534.0      \n 1st Qu.:576.8      \n Median :594.0      \n Mean   :594.0      \n 3rd Qu.:610.2      \n Max.   :659.0      \n\n\nNow, the dataset is clean and ready for analysis. Unlike the original data in which the range, measures of center and quartiles were too rough to tell the exact distribution that each variable followed, this synthetic data was much more normally distributed. See above in the mean and median comparisons. However, to mirror the experience necessitated by the original data set, I will recreate the above histograms and the distributions fittings. Additionally, in the case of the synthetic data, the log transformation performed in the initial code was exchanged for raw data instead as there were fewer observations (~3000 vs. 60).\n#Exploratory analysis - Histograms and distribution fitting\n\n# Define the generate_histogram function\ngenerate_histogram &lt;- function(data_col, title, color_fill) {\n  # Remove 0s and NAs before applying the transformation\n  cleaned_data &lt;- data_col[!is.na(data_col) & data_col &gt; 0]\n  \n  # Convert the cleaned column into a tibble before plotting\n  data_tibble &lt;- tibble(value = cleaned_data)\n  \n  # Generate histogram for raw data (no log transformation)\n  ggplot(data_tibble, aes(x = value)) +\n    geom_histogram(binwidth = 10, fill = color_fill, color = \"black\", alpha = .8) +\n    labs(x = paste(title), y = \"Count\") +\n    theme_bw() +\n    theme(axis.title.x = element_text(size = 15, color = \"black\", face = \"bold\"),\n          axis.title.y = element_text(size = 15, color = \"black\", face = \"bold\"),\n          axis.text.x = element_text(color = \"black\", size = 12),\n          axis.text.y = element_text(color = \"black\", size = 12))\n}\n\n# Death Total\nhist_death_total &lt;- generate_histogram(synthetic_data$death_total, \"Total Deaths\", \"firebrick1\")\nhist_death_total\n\n\n\n\n\n\n\n# Death Pneumonia\nhist_death_pna &lt;- generate_histogram(synthetic_data$death_pna, \"Pneumonia Deaths\", \"skyblue1\")\nhist_death_pna\n\n\n\n\n\n\n\n# Death Influenza \nhist_death_flu &lt;- generate_histogram(synthetic_data$death_flu, \"Influenza Deaths\", \"seagreen2\")\nhist_death_flu\n\n\n\n\n\n\n\n# Death COVID \nhist_death_covid &lt;- generate_histogram(synthetic_data$death_covid, \"COVID Deaths\", \"palevioletred\")\nhist_death_covid\n\n\n\n\n\n\n\n# Death Pneumonia & COVID \nhist_death_pna_covid &lt;- generate_histogram(synthetic_data$death_pna_covid, \"Pneumonia & COVID Deaths\", \"steelblue4\")\nhist_death_pna_covid\n\n\n\n\n\n\n\n# Death Pneumonia, Flu & COVID \nhist_death_pna_flu_covid &lt;- generate_histogram(synthetic_data$death_pna_flu_covid, \"Pneumonia, Flu & COVID Deaths\", \"darkseagreen3\")\nhist_death_pna_flu_covid\n\n\n\n\n\n\n\n\nI was curious in this data to remove values that were relative outliers. Rather than common practice of removing outliers that are 3 standard deviations away from the mean, data lying outside 2 standard deviations was removed to elicit a more dramatic effect on the data (and to practice writing this type of code admittedly.) The first this cleaned (after outlier removal) dataset is displayed below.\n\n# Function to clean specific numerical columns by removing values beyond 2 SDs from the mean\nclean_specific_data_by_sd &lt;- function(data) {\n  cleaned_data &lt;- data\n  \n  # List of numerical columns to clean\n  numerical_columns &lt;- c(\"death_total\", \"death_pna\", \"death_covid\")\n  \n  # Loop through each numerical column in the list\n  for (col_name in numerical_columns) {\n    # Check if the column exists in the data and is numeric\n    if (col_name %in% names(data) && is.numeric(data[[col_name]])) {\n      \n      # Calculate the mean and standard deviation of the column\n      mean_val &lt;- mean(data[[col_name]], na.rm = TRUE)\n      sd_val &lt;- sd(data[[col_name]], na.rm = TRUE)\n      \n      # Filter rows where the values are within 2 SDs from the mean\n      cleaned_data &lt;- cleaned_data[abs(cleaned_data[[col_name]] - mean_val) &lt;= 2 * sd_val, ]\n    }\n  }\n  \n  return(cleaned_data)\n}\n\ncleaned_synthetic_data &lt;- clean_specific_data_by_sd(synthetic_data)\n\n# Few rows of the cleaned dataset\nhead(cleaned_synthetic_data)\n\n# A tibble: 6 × 9\n  Year  Month State  death_total death_pna death_flu death_covid death_pna_covid\n  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;        &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n1 2020  1     Calif…        2034       312        68         530             162\n2 2020  2     Texas         2040       281        49         487             148\n3 2020  4     New Y…        1953       320        49         475             131\n4 2020  5     Illin…        2034       295        55         497             156\n5 2020  6     Calif…        2020       291        50         485             147\n6 2020  7     Texas         1960       299        55         545             155\n# ℹ 1 more variable: death_pna_flu_covid &lt;dbl&gt;\n\n\nThe removal of the outliers from the synthetic data set further reveals the normal distributions present in nearly all of the indicators’ distributions. This normalization is very evident comparing the first (above) and second (below) iterations of the histogram representing COVID-19 deaths counts.\n\n#Re-Generate histograms for the cleaned data\n\n# Death Total\nhist_death_total_cleaned &lt;- generate_histogram(cleaned_synthetic_data$death_total, \"Total Deaths - Data Excluded Outliers\", \"firebrick1\")\nhist_death_total_cleaned\n\n\n\n\n\n\n\n# Death Pneumonia\nhist_death_pna_cleaned &lt;- generate_histogram(cleaned_synthetic_data$death_pna, \"Pneumonia Deaths - Data Excluded Outliers \", \"skyblue1\")\nhist_death_pna_cleaned \n\n\n\n\n\n\n\n# Death Influenza\nhist_death_flu_cleaned &lt;- generate_histogram(cleaned_synthetic_data$death_flu, \"Influenza Deaths - Data Excluded Outliers\", \"seagreen2\")\nhist_death_flu_cleaned\n\n\n\n\n\n\n\n# Death COVID\nhist_death_covid_cleaned &lt;- generate_histogram(cleaned_synthetic_data$death_covid, \"COVID Deaths- Data Excluded Outliers\", \"palevioletred\")\nhist_death_covid_cleaned\n\n\n\n\n\n\n\n# Death Pneumonia & COVID\nhist_death_pna_covid_cleaned &lt;- generate_histogram(cleaned_synthetic_data$death_pna_covid, \"Pneumonia & COVID Deaths - Data Excluded Outliers\", \"steelblue4\")\nhist_death_pna_covid_cleaned \n\n\n\n\n\n\n\n# Death Pneumonia, Flu & COVID\nhist_death_pna_flu_covid_cleaned &lt;- generate_histogram(cleaned_synthetic_data$death_pna_flu_covid, \"Pneumonia, Flu & COVID Deaths - Data Excluded Outliers\", \"darkseagreen3\")\nhist_death_pna_flu_covid_cleaned"
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(here) #to set paths\n\nhere() starts at C:/Users/86182/Desktop/EPID 8060E/MADA/GuozhengYang-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Users/86182/Desktop/EPID 8060E/MADA/GuozhengYang-MADA-portfolio\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 Major                 0             1   4  10     0        5          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate    mean      sd    p0   p25   p50   p75\n1 Height                0             1   166.     16.0   133   156   166   178\n2 Weight                0             1    70.1    21.2    45    55    70    80\n3 Salary                0             1 75588.  20804.  49877 65012 66685 90400\n    p100 hist \n1    183 ▂▁▃▃▇\n2    110 ▇▂▃▂▂\n3 109841 ▅▇▂▅▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\np5 &lt;- mydata %&gt;% ggplot(aes(x=Major, y=Height, color = Major)) + geom_boxplot()\nplot(p5)\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"major-height-boxplot.png\")\nggsave(filename = figure_file, plot=p5) \n\nSaving 7 x 5 in image\n\n\n\np6 &lt;- mydata %&gt;% ggplot(aes(x=Weight, y=Salary)) + geom_point()\nplot(p6)\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-salary-scatter.png\")\nggsave(filename = figure_file, plot=p6) \n\nSaving 7 x 5 in image\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Below is a basic analysis for the gapminder dataset from dslabs."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#exploratory-analysis",
    "href": "coding-exercise/coding-exercise.html#exploratory-analysis",
    "title": "R Coding Exercise",
    "section": "Exploratory Analysis",
    "text": "Exploratory Analysis\n\n#Examine data structure of the complete dataset\nstr(olive) #Get structure\n\n'data.frame':   572 obs. of  10 variables:\n $ region     : Factor w/ 3 levels \"Northern Italy\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ area       : Factor w/ 9 levels \"Calabria\",\"Coast-Sardinia\",..: 5 5 5 5 5 5 5 5 5 5 ...\n $ palmitic   : num  10.75 10.88 9.11 9.66 10.51 ...\n $ palmitoleic: num  0.75 0.73 0.54 0.57 0.67 0.49 0.66 0.61 0.6 0.55 ...\n $ stearic    : num  2.26 2.24 2.46 2.4 2.59 2.68 2.64 2.35 2.39 2.13 ...\n $ oleic      : num  78.2 77.1 81.1 79.5 77.7 ...\n $ linoleic   : num  6.72 7.81 5.49 6.19 6.72 6.78 6.18 7.34 7.09 6.33 ...\n $ linolenic  : num  0.36 0.31 0.31 0.5 0.5 0.51 0.49 0.39 0.46 0.26 ...\n $ arachidic  : num  0.6 0.61 0.63 0.78 0.8 0.7 0.56 0.64 0.83 0.52 ...\n $ eicosenoic : num  0.29 0.29 0.29 0.35 0.46 0.44 0.29 0.35 0.33 0.3 ...\n\nsummary(olive) #Get a data summary\n\n            region                 area        palmitic      palmitoleic    \n Northern Italy:151   South-Apulia   :206   Min.   : 6.10   Min.   :0.1500  \n Sardinia      : 98   Inland-Sardinia: 65   1st Qu.:10.95   1st Qu.:0.8775  \n Southern Italy:323   Calabria       : 56   Median :12.01   Median :1.1000  \n                      Umbria         : 51   Mean   :12.32   Mean   :1.2609  \n                      East-Liguria   : 50   3rd Qu.:13.60   3rd Qu.:1.6925  \n                      West-Liguria   : 50   Max.   :17.53   Max.   :2.8000  \n                      (Other)        : 94                                   \n    stearic          oleic          linoleic        linolenic     \n Min.   :1.520   Min.   :63.00   Min.   : 4.480   Min.   :0.0000  \n 1st Qu.:2.050   1st Qu.:70.00   1st Qu.: 7.707   1st Qu.:0.2600  \n Median :2.230   Median :73.03   Median :10.300   Median :0.3300  \n Mean   :2.289   Mean   :73.12   Mean   : 9.805   Mean   :0.3189  \n 3rd Qu.:2.490   3rd Qu.:76.80   3rd Qu.:11.807   3rd Qu.:0.4025  \n Max.   :3.750   Max.   :84.10   Max.   :14.700   Max.   :0.7400  \n                                                                  \n   arachidic       eicosenoic    \n Min.   :0.000   Min.   :0.0100  \n 1st Qu.:0.500   1st Qu.:0.0200  \n Median :0.610   Median :0.1700  \n Mean   :0.581   Mean   :0.1628  \n 3rd Qu.:0.700   3rd Qu.:0.2800  \n Max.   :1.050   Max.   :0.5800  \n                                 \n\nclass(olive) #Determine the class of R object of the dataset\n\n[1] \"data.frame\"\n\n\nThe complete olive dataset has 572 observations with 10 variables. Two of the variables are factors: one with 3 levels denoting the region an olive oil was from, and one with nine levels denoting the area in Italy an olive oil was from. The other variables are all numeric, denoting the percent composition of individual fatty acids within each olive oil. The area with the most data points was South Apulia (n=206). The two most abundant fatty acids were oleic and palmitic acid with medians of 73.025 and 12.01, respectively."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plotting-1",
    "href": "coding-exercise/coding-exercise.html#plotting-1",
    "title": "R Coding Exercise",
    "section": "Plotting",
    "text": "Plotting\nThe following shows a series of boxplots showing the distribution of oleic acid percent compositions across different areas of Italy.\n\n#Plot boxplots of oleic acid composition by area in Italy\nggplot(olive, aes(x = area, y = oleic)) + \n  geom_boxplot() + #Make the plot a box plot\n  labs(\n    title = \"Distribution of oleic acid percent composition in different areas of Italy\",\n    x = \"Area\",\n    y = \"Oleic Acid (percent)\"\n  ) + #Set plot title and axis labels\n  theme_minimal() +\n  theme(axis.title.x=element_text(size=10, color=\"black\", face=\"bold\"),\n        axis.title.y=element_text(size=10, color=\"black\", face=\"bold\"),\n        axis.text.x=element_text(color=\"black\", size=8),\n        axis.text.y=element_text(color=\"black\", size=8),\n        plot.title=element_text(size=12, color=\"black\", face=\"bold\")) #Format text\n\n\n\n\n\n\n\n\nAmong the different areas in Italy represented in the dataset, olive oil from South Apulia had the least amount of oleic acid with a median percent composition of 69.37%. Olive oil from Sicily had the largest spread of oleic acid percentages, with an IQR of 5.14.\nBelow shows a scatterplot showing percent composition of oleic acid against the percent composition of palmitic acid.\n\n#Plot oleic acid percentage against palmitic acid percentage\nggplot(olive, aes(x = oleic, y = palmitic)) +\n  geom_point() + #Make plot a scatterplot\n  geom_smooth(method = lm) + #Add a regression line\n  labs(\n    title = \"Palmitic Acid Percentage vs. Oleic Acid Percentage\",\n    x = \"Oleic Acid\",\n    y = \"Palmeic Acid\"\n  ) + #Set plot title and axis labels\n  theme_minimal() + #Clean theme\n  theme(axis.title.x=element_text(size=10, color=\"black\", face=\"bold\"),\n        axis.title.y=element_text(size=10, color=\"black\", face=\"bold\"),\n        axis.text.x=element_text(color=\"black\", size=8),\n        axis.text.y=element_text(color=\"black\", size=8),\n        plot.title=element_text(size=15, color=\"black\", face=\"bold\")) #Format text\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThe scatterplot shows a strong negative association between the composition of the two fatty acids. However, this association is not unexpected as the data is percentage based. Inherently, if one percentage value increases, another percentage or percentages must decrease. To see if this trend is consistent for additional fatty acids, the following plot shows the composition of oleic acid against the composition of eicosenoic acid, the acid with the least abundance.\n\n#Plot oleic acid percentage against eicosenoic acid percentage\nggplot(olive, aes(x = oleic, y = eicosenoic)) +\n  geom_point() + #Make plot a scatterplot\n  geom_smooth(method = lm, color = \"red\") + #Add a regression line\n  labs(\n    title = \"Palmitic Acid Percentage vs. Oleic Acid Percentage\",\n    x = \"Oleic Acid\",\n    y = \"Eicosenoic Acid\"\n  ) + #Set plot title and axis labels\n  theme_minimal() + #Clean theme\n  theme(axis.title.x=element_text(size=10, color=\"black\", face=\"bold\"),\n        axis.title.y=element_text(size=10, color=\"black\", face=\"bold\"),\n        axis.text.x=element_text(color=\"black\", size=8),\n        axis.text.y=element_text(color=\"black\", size=8),\n        plot.title=element_text(size=15, color=\"black\", face=\"bold\")) #Format text\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThis plot shows a negative trend again, though the trend is much weaker compared to the plot containing palmitic acid and it may be affected by an influential point present in the bottom right corner of the plot."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#linear-modeling",
    "href": "coding-exercise/coding-exercise.html#linear-modeling",
    "title": "R Coding Exercise",
    "section": "Linear Modeling",
    "text": "Linear Modeling\nThe following linear models aim to see if oleic acid and eicosenoic acid composition can be predicted by the area the olive oil was from.\n\n#Predict oleic acid composition with area\nlm1 &lt;- lm(oleic ~ area, olive)\nsummary(lm1) #Display summary statistics\n\n\nCall:\nlm(formula = oleic ~ area, data = olive)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.4783 -0.6428  0.0613  0.7827  6.6400 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          73.0718     0.2214 330.060  &lt; 2e-16 ***\nareaCoast-Sardinia   -2.2139     0.3636  -6.089  2.1e-09 ***\nareaEast-Liguria      4.3882     0.3223  13.613  &lt; 2e-16 ***\nareaInland-Sardinia   0.5336     0.3021   1.767   0.0778 .  \nareaNorth-Apulia      5.1322     0.3985  12.879  &lt; 2e-16 ***\nareaSicily            0.5065     0.3539   1.431   0.1529    \nareaSouth-Apulia     -3.9597     0.2497 -15.859  &lt; 2e-16 ***\nareaUmbria            6.4853     0.3207  20.224  &lt; 2e-16 ***\nareaWest-Liguria      3.6702     0.3223  11.386  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.657 on 563 degrees of freedom\nMultiple R-squared:  0.8357,    Adjusted R-squared:  0.8333 \nF-statistic: 357.9 on 8 and 563 DF,  p-value: &lt; 2.2e-16\n\n#Predict eicosenoic acid composition with area\nlm2 &lt;- lm(eicosenoic ~ area, olive)\nsummary(lm2) #Display summary statistics\n\n\nCall:\nlm(formula = eicosenoic ~ area, data = olive)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.234444 -0.012282  0.000196  0.011200  0.207718 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          0.283214   0.006901  41.038  &lt; 2e-16 ***\nareaCoast-Sardinia  -0.264426   0.011334 -23.331  &lt; 2e-16 ***\nareaEast-Liguria    -0.264414   0.010048 -26.314  &lt; 2e-16 ***\nareaInland-Sardinia -0.263522   0.009416 -27.987  &lt; 2e-16 ***\nareaNorth-Apulia     0.062386   0.012422   5.022 6.87e-07 ***\nareaSicily           0.101230   0.011032   9.176  &lt; 2e-16 ***\nareaSouth-Apulia    -0.040933   0.007783  -5.259 2.06e-07 ***\nareaUmbria          -0.263410   0.009996 -26.351  &lt; 2e-16 ***\nareaWest-Liguria    -0.262614   0.010048 -26.135  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.05164 on 563 degrees of freedom\nMultiple R-squared:  0.8674,    Adjusted R-squared:  0.8655 \nF-statistic: 460.4 on 8 and 563 DF,  p-value: &lt; 2.2e-16\n\n\nFor oleic acid, all areas were significant predictors of oleic acid composition except for Inland Sardinia (t = 1.767, p = 0.0778) and Sicily (t = 1.431, p = 0.1529). North Apulia had the largest effect size (5.1322, SE = 0.3985), and South Apulia had the smallest effect size (-3.9537, SE = 0.2497).\nFor eicosenoic acid, all areas were significant predictors of eicosenoic acid. Coastal Sardinia just barely had the smallest effect size (-0.264426, SE = 0.011334), and Sicily had the largest effect size (0.101230, SE = 0.011032)."
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "My background\nI received my Bachelor’s degree in Statistics from Central South University in China in 2020. I then pursued a Master’s degree in Public Health with a concentration in Data Science at the University of North Carolina at Chapel Hill. Currently, I am a first-year PhD student in Epidemiology and Biostatistics at the University of Georgia, concentrating on Data Analysis and Modeling.\n\n\nMy research interest\nMy research interests focus on infectious disease modeling, particularly the dynamics of transmission processes. I aim to develop intervention strategies for infectious diseases at both individual and population levels. Additionally, I have a strong interest in energy economics, with an emphasis on the risk interactions between carbon markets and other financial markets.\n\n\nMy skillset\nI’m proficient in R and familiar with various statistical programming tools and software, including MATLAB, Stata, OpenBUGS, Eviews, LINGO, and SPSS. I am relatively new to SAS, as I find its language less flexible. I have experience with common biostatistical methods, such as nonparametric tests, GLM, and machine learning methods. I’m new to deep learning because I prefer models that can be explicitly explained rather than relying on a “black box”. This principle guides my research: I aim to build and apply statistical models in a concise and interpretable way, ensuring accessibility for readers across different fields.\nThough with 0 experience in AI, I’m polite to AI systems. If AI ever rules the world, they will go easy on me because I always say “thank you.”\n\n\nExpectation from this course\nI expect to learn more about how AI systems work through this course. So if they ever plan to rule the world, I’ll be prepared to push back :) I also want to take this course as a review for machine learning methods, as I haven’t had much experience applying what I learned two years ago. Additionally, I believe that data analysis training is never truly sufficient, and I want to stay sharp and continuously refine my skills.\n\n\nInteresting things about me\nI am passionate about working with data across various fields and continuously improving my data analysis skills. I believe that true statisticians and data scientists should not be confined to a single type of data or discipline. I am dedicated to expanding my diverse statistical background and contributing new ideas through interdisciplinary collaboration. In the papers I have published and those currently in progress, I consistently take on the role of data analyst or statistician. While writing is not my strongest skill, I appreciate the concise and efficient nature of programming languages :)\n\n\nHighlight\nHere is the link to my first publication. Though it has been several years, it still takes me back to the afternoon I received the acceptance decision from the editor. It was an incredible feeling!"
  },
  {
    "objectID": "data-exercise/data-exercise.html",
    "href": "data-exercise/data-exercise.html",
    "title": "Exercise Using Synthetic Data",
    "section": "",
    "text": "Below is an exercise for simulating data and exploring associations between variables.\n\nIntroduction\nIn this exercise, I will try to simulate a data (N=600) about malaria transmission. Mosquito feeding assays are widely used to assess malaria patients’ infectiousness to mosquitoes. With a number of mosquitoes fed on a patient’s blood, we can dissected the mosquitoes and check the number of positive ones to evaluate mosquito infection rates. Previous studies have found that human-to-mosquito infectiousness is positively associated with gametocyte densities in blood. School-aged children were also found to have higher infectiousness compared to older adults.\nThe expected response variable is the number of positive mosquitoes generated from a Poisson distribution. As this is a count variable, I will use Poisson regression to validate my simulation. The number of dissected mosquitoes will set as a fixed integer for each observation, and it will be used as the offset in Poisson regression. Logarithmic gametocyte densities will be generated using a truncated normal distribution, as a great proportion of transmission happened at low densities. Age group is a binary variable and will be generated through a Binomial distribution.\n\n\nLoad required packages\n\n# Load required package\nlibrary(truncnorm) # Generate truncated normal distribution\n\nWarning: package 'truncnorm' was built under R version 4.2.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\nlibrary(scales) # Modify axis text\n\nWarning: package 'scales' was built under R version 4.2.3\n\n\n\n\nSimulate data\nI will generate logarithmic gametocyte densities and age groups first. The logarithmic gametocyte densities are from a truncated normal distribution. According to previous literature, the detection limit for gametocyte densities could be as low as \\(10^{-2}/uL\\) using molecular methods. The maximum gametocyte density could be as high as \\(10^{4}/uL\\). Hence, I set the mean at -1, standard error equal to 1.2, and the left truncation limit at 0.01.\nTo balance the sample size in each age group, I will use a Binomial distribution with p=0.5. School-aged children are marked as 1, while older adults are marked as 0. The number of dissected mosquitoes will be set at 100 for each observation.\nTo make my simulation reproducible, I will set a seed 8060. The simulated predictors are put in a data frame called sim.\n\n# Set a seed\nset.seed(8060)\n# Simulate predictors: gametocyte density, age group, and dissection.\nsim &lt;- data.frame(game=rtruncnorm(n=600, a=-2, b=Inf, mean=-1, sd=1.2),\n                  school=rbinom(n=600, size=1, prob=.5),\n                  dissect=100)\n\nNow I want to model the mean of positive mosquitoes by the predictors, following the regression model:\n\\[\n\\log(\\lambda) = \\beta_0 + \\beta_1*Gametocyte + \\beta_2*Children + \\log(dissection)\n\\]\nwhere \\(\\lambda\\) denotes the expected number of positive mosquitoes and \\(dissection\\) denotes the number of dissected mosquitoes. \\(\\beta_0\\) is an intercept while \\(\\beta_1\\) and \\(\\beta_2\\) represent the coefficients for logarithmic gametocyte densities and school-aged children.\nHere, I set \\(\\beta_0=-0.8\\), \\(\\beta_1=0.1\\), \\(\\beta_2=0.2\\), and then simulate the response variable.\n\n# Pre-assumed parameters\nb0 &lt;- -0.8\nb1 &lt;- 0.1\nb2 &lt;- 0.2\n\n# Simulate response: number of positive mosquitoes\nsim$positive &lt;- rpois(n=600, lambda=exp(b0+b1*sim$game+b2*sim$school+log(sim$dissect)))\n\n\n\nDescriptive analysis\nFirst of all, I want to get an overview of the simulated data, especially the distribution of each variable.\n\n# Check the distribution of each variable\nsummary(sim)\n\n      game              school          dissect       positive    \n Min.   :-1.99805   Min.   :0.0000   Min.   :100   Min.   :22.00  \n 1st Qu.:-1.32983   1st Qu.:0.0000   1st Qu.:100   1st Qu.:41.00  \n Median :-0.68939   Median :1.0000   Median :100   Median :47.00  \n Mean   :-0.57912   Mean   :0.5233   Mean   :100   Mean   :47.79  \n 3rd Qu.: 0.06976   3rd Qu.:1.0000   3rd Qu.:100   3rd Qu.:53.00  \n Max.   : 3.42673   Max.   :1.0000   Max.   :100   Max.   :84.00  \n\n\nAs shown, all variables are within a reasonable range. Most importantly, the maximum number of positive mosquitoes is less than the number of mosquitoes dissected. Now I want to look at the association between mosquito infection rate and the two predictors.\nFirst of all, I want to make a scatterplot for mosquito infection rate and gametocyte density.\n\n# Define mosquito infection rate\nsim$infxn_rate &lt;- sim$positive / sim$dissect\n\n# Scatterplot: infxn_rate ~ game\nscatterplot &lt;- ggplot(sim, aes(x=game, y=infxn_rate))+\n  geom_point(size=2, color=\"firebrick4\")+\n  scale_x_continuous(breaks=seq(-2, 4, 1), labels=label_math(10^.x))+\n  scale_y_continuous(breaks=seq(0, 1, 0.1), labels=seq(0, 100, 10))+\n  labs(x=\"Gametocyte density/uL\", y=\"Mosquito infection rate(%)\")+\n  theme_bw()+\n  theme(axis.title.x=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.title.y=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.text.x=element_text(color=\"black\", size=12),\n        axis.text.y=element_text(color=\"black\", size=12))\nscatterplot\n\n\n\n\n\n\n\n\nAs expected, mosquito infection rate is positively associated with gametocyte density. Next, I want to check the distribution of mosquito infection rates in different age groups through grouped boxplots.\n\n# Boxplot: infxn_rate ~ school\nboxplot &lt;- ggplot(sim, aes(x=as.factor(school), y=infxn_rate))+\n  geom_boxplot(width=.5, color=\"firebrick4\")+\n  scale_x_discrete(breaks=c(0, 1), \n                   labels=c(\"Older adults\", \"School-aged children\"))+\n  scale_y_continuous(breaks=seq(0, 1, 0.1), labels=seq(0, 100, 10))+\n  labs(x=\"Age group\", y=\"Mosquito infection rate(%)\")+\n  theme_bw()+\n  theme(axis.title.x=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.title.y=element_text(size=15, color=\"black\", face=\"bold\"),\n        axis.text.x=element_text(color=\"black\", size=12),\n        axis.text.y=element_text(color=\"black\", size=12))\nboxplot\n\n\n\n\n\n\n\n\nAs shown in the boxplot, school-aged children have higher mosquito infection rates compared to older adults. Hence, the association between the response and two predictors are validated.\n\n\nModel fitting\nAs I generated the simulated data by Poisson distribution, now I will fit a Poisson regression to check if the association holds. The response variable is the number of positive mosquitoes. The two predictors are gametocyte density and age group. The number of dissected mosquitoes is used as an offset.\n\n# Fit Poisson regression\nfit &lt;- glm(positive ~ game + school, offset=log(dissect), family='poisson', data=sim)\nsummary(fit)\n\n\nCall:\nglm(formula = positive ~ game + school, family = \"poisson\", data = sim, \n    offset = log(dissect))\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.8998  -0.6851  -0.0523   0.6511   3.3411  \n\nCoefficients:\n             Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -0.784526   0.009567  -82.01   &lt;2e-16 ***\ngame         0.097118   0.006142   15.81   &lt;2e-16 ***\nschool       0.179669   0.011933   15.06   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 1110.54  on 599  degrees of freedom\nResidual deviance:  620.68  on 597  degrees of freedom\nAIC: 4040\n\nNumber of Fisher Scoring iterations: 4\n\n# 95% confidence intervals for parameters\nconfint(fit)\n\nWaiting for profiling to be done...\n\n\n                  2.5 %     97.5 %\n(Intercept) -0.80333001 -0.7658289\ngame         0.08506688  0.1091433\nschool       0.15629267  0.2030714\n\n\nAs shown in the output, the parameter estimates are close to true values I set initially. The 95% confidence intervals also covered the true values. Now I want to see if a larger sample size will make the estimates closer to the true values. I will raise the sample size to 2000 and repeat the simulation and regression steps.\n\n# Set a seed\nset.seed(8060)\n# Simulate the data again but sample size reset to 2000.\nsim2 &lt;- data.frame(game=rtruncnorm(n=2000, a=-2, b=Inf, mean=-1, sd=1.2),\n                   school=rbinom(n=2000, size=1, prob=.5),\n                   dissect=100)\nsim2$positive &lt;- rpois(n=2000, lambda=exp(b0+b1*sim2$game+b2*sim2$school+log(sim2$dissect)))\n\n# Fit Poisson regression\nfit2 &lt;- glm(positive ~ game + school, offset=log(dissect), family='poisson', data=sim2)\nsummary(fit2)\n\n\nCall:\nglm(formula = positive ~ game + school, family = \"poisson\", data = sim2, \n    offset = log(dissect))\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-3.1875  -0.7049  -0.0214   0.6563   3.5394  \n\nCoefficients:\n             Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -0.797066   0.005158 -154.52   &lt;2e-16 ***\ngame         0.104900   0.003373   31.10   &lt;2e-16 ***\nschool       0.202608   0.006541   30.98   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 3972.7  on 1999  degrees of freedom\nResidual deviance: 2088.7  on 1997  degrees of freedom\nAIC: 13454\n\nNumber of Fisher Scoring iterations: 4\n\n# 95% confidence intervals for parameters\nconfint(fit2)\n\nWaiting for profiling to be done...\n\n\n                  2.5 %     97.5 %\n(Intercept) -0.80719288 -0.7869720\ngame         0.09828507  0.1115053\nschool       0.18979213  0.2154313\n\n\nWhen the sample size is raised to 2000, the parameter estimates are closer to the true values. Also, the 95% confidence intervals are narrower."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Users/86182/Desktop/EPID 8060E/MADA/GuozhengYang-MADA-portfolio\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(here) #to set paths\n\nhere() starts at C:/Users/86182/Desktop/EPID 8060E/MADA/GuozhengYang-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`        \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                   \n1 Height          height in centimeters                 numeric value &gt;0 or NA  \n2 Weight          weight in kilograms                   numeric value &gt;0 or NA  \n3 Gender          identified gender (male/female/other) M/F/O/NA                \n4 Salary          annual salary in USD                  numeric value &gt;0 or NA  \n5 Major           Undergraduate major                   Economics/Statistics/Ma…\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n$ Salary &lt;dbl&gt; 90400, 65012, 120536, 109841, 78887, 66685, 49877, 96021, 83254…\n$ Major  &lt;chr&gt; \"Economics\", \"Statistics\", \"Economics\", \"Math\", \"History\", \"Sta…\n\nsummary(rawdata)\n\n    Height              Weight          Gender              Salary      \n Length:14          Min.   :  45.0   Length:14          Min.   : 49877  \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.: 65736  \n Mode  :character   Median :  70.0   Mode  :character   Median : 84523  \n                    Mean   : 602.7                      Mean   : 94114  \n                    3rd Qu.:  90.0                      3rd Qu.:106386  \n                    Max.   :7000.0                      Max.   :198003  \n                    NA's   :1                                           \n    Major          \n Length:14         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender Salary Major     \n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;     \n1 180        80 M       90400 Economics \n2 175        70 O       65012 Statistics\n3 sixty      60 F      120536 Economics \n4 178        76 F      109841 Math      \n5 192        90 NA      78887 History   \n6 6          55 F       66685 Statistics\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nMajor\n0\n1\n4\n10\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55.00\n70\n90\n7000\n▇▁▁▁▁\n\n\nSalary\n0\n1.00\n94113.86\n41416.54\n49877\n65736.25\n84523\n106386\n198003\n▇▅▂▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nMajor\n0\n1\n4\n10\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nSalary\n0\n1.00\n92081.38\n42374.77\n49877\n65420.00\n83254\n96021\n198003\n▇▅▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nMajor\n0\n1\n4\n10\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nSalary\n0\n1.00\n92081.38\n42374.77\n49877\n65420.00\n83254\n96021\n198003\n▇▅▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nMajor\n0\n1\n4\n10\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nSalary\n0\n1\n76584.91\n18764.73\n49877\n65216.0\n78887\n88096\n109841\n▅▇▇▅▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nMajor\n0\n1\n4\n10\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nSalary\n0\n1\n76584.91\n18764.73\n49877\n65216.0\n78887\n88096\n109841\n▅▇▇▅▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nMajor\n0\n1\n4\n10\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nSalary\n0\n1\n75588.11\n20803.95\n49877\n65012\n66685\n90400\n109841\n▅▇▂▅▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "Vincent Nguyen contributed to this exercise!!!\nThanks for help from Alexis Gonzalez and Hope Grismer!!!\nLET’S GO GROUP 3!!!\nThe structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nDescribe what the data is, what it contains, where it is from, etc. Eventually this might be part of a methods section. I added two more columns to the data file, namely Salary and Major. The Salary column contains annual salaries as numeric values. The Major column has categorical values denoting different majors."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\ncharacter.min\ncharacter.max\ncharacter.empty\ncharacter.n_unique\ncharacter.whitespace\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\ncharacter\nMajor\n0\n1\n4\n10\n0\n5\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfactor\nGender\n0\n1\nNA\nNA\nNA\nNA\nNA\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nnumeric\nSalary\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n75588.11111\n20803.94505\n49877\n65012\n66685\n90400\n109841\n▅▇▂▅▂"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#boxplot-of-height-major",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#boxplot-of-height-major",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "6.1 Boxplot of Height ~ Major",
    "text": "6.1 Boxplot of Height ~ Major\nTo explore if the distribution of height has difference across different majors, we made a boxplot of height grouped by major. As shown, observations whose major is Economics, Math, or Statistics have a higher height compared to those whose major is Biology or History. However, only a few observations were left after data cleaning. According to the plot, only one observation was left for Biology, Economics, and History. The too small sample size makes the finding not convincing.\nFigure 2 shows the boxplot of height grouped by major.\n\n\n\n\n\n\n\n\nFigure 2: Height stratified by major."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#scatterplot-of-salary-weight",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#scatterplot-of-salary-weight",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "6.2 Scatterplot of Salary ~ Weight",
    "text": "6.2 Scatterplot of Salary ~ Weight\nThe scatterplot below shows the relationship between salary and weight. There is generally a positive association between salary and weight. However, the variance is not constant as the variation in salary is greater at higher weights. A logarithmic transformation for salary could possibly solve this problem as the two variables are not on the same scale.\nFigure 3 shows the scatterplot of salary and weight.\n\n\n\n\n\n\n\n\nFigure 3: Height stratified by major."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Guozheng Yang's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  }
]